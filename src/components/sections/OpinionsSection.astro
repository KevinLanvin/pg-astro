---
import { client } from "../../../tina/__generated__/client";
import Icon from "../Icon.astro";

const { title, background } = Astro.props;
const opinionsResponse = await client.queries.opinionsConnection();
type Opinion = {
  opinion: string;
  authorName: string;
  authorAge: number;
};
const opinions: Opinion[] = opinionsResponse.data.opinionsConnection.edges?.map(
  (x) => x?.node as Opinion
) as Opinion[];
---

<script
  src='https://cdn.jsdelivr.net/npm/swiper@11/swiper-element-bundle.min.js'
></script>

<section class='opinions'>
  <div class='opinions__text'>
    <h2>
      {title}
    </h2>
    <swiper-container id='opinions-swiper' class='opinions__carousel'>
      {
        opinions.map((opinion: Opinion) => (
          <swiper-slide>
            <p class='opinions__paragraph'>
              {opinion.opinion}
              <br />
              {opinion.authorName} - {opinion.authorAge}
            </p>
          </swiper-slide>
        ))
      }
    </swiper-container>
    <div class='swiper-pagination'></div>
    <Icon name='quote' class='opinions__quote' />
  </div>
</section>

<script>
  // swiper element
  const swiperEl = document.getElementById("opinions-swiper");

  // swiper parameters
  const swiperParams = {
    speed: 500,
    autoplay: {
      pauseOnMouseEnter: true,
    },
    navigation: false,
    loop: true,
    pagination: {
      el: ".swiper-pagination",
      clickable: true,
      renderBullet: function (index, className) {
        return `
        <div class=${className}></div>`;
      },
    },
  };
  Object.assign(swiperEl, swiperParams);
  swiperEl.initialize();
</script>

<style lang='scss' define:vars={{ background: `url(${background})` }}>
  @import "../../styles/_vars";

  .opinions {
    width: 100%;
    position: relative;
    background-image: var(--background);
    background-size: cover;
    &__text {
      padding: $gutter-large;
      width: 80%;
      margin: $gutter-large auto;
      position: relative;
      background-color: $color-overlay;
      h2 {
        margin-bottom: $gutter;
        color: $color-white;
        text-align: center;
      }
    }
    &__quote {
      position: absolute;
      top: $gutter;
      left: $gutter;
      width: 6rem;
      height: auto;
    }
    &__paragraph {
      color: $color-white;
      font-weight: bold;
      min-width: 600px;
    }
    &__carousel {
      min-width: 600px;
    }
    swiper-slide {
      padding: 0 $gutter-large;
      cursor: grab;
    }
  }

  @media (max-width: $breakpoint) {
    .opinions {
      padding: $gutter;
      &__text {
        padding: $gutter;
        width: 100%;
      }
      &__quote {
        top: $gutter-extra-small;
        left: $gutter-extra-small;
        width: 3rem;
      }
      &__paragraph {
        width: 100%;
        min-width: unset;
        padding: 0;
      }
      &__carousel {
        min-width: unset;
      }
      &__background {
        display: flex;
        justify-content: stretch;
        align-items: stretch;
        &--image {
          position: relative;
          width: 100%;
        }
      }
      swiper-slide {
        padding: 0;
        cursor: grab;
      }
    }
  }
</style>
