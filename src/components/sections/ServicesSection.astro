---
import { client } from "../../../tina/__generated__/client";
const { title } = Astro.props;
const servicesResponse = await client.queries.servicesConnection();
type Service = {
  title: string;
  image: string;
  imageAlt: string;
  link: {
    _sys: {
      filename: string;
    };
  };
};
const services: Service[] = servicesResponse.data.servicesConnection.edges?.map(
  (x) => x?.node
) as unknown as Service[];
// Uncomment to filter out the current service
// .filter(
//   (service) => `/${service?.link?._sys.filename}` !== Astro.url.pathname
// );
---

<section class='services'>
  <h2>{title}</h2>
  <div class='servicesGrid'>
    {
      services.map((service) => (
        <a class='service' href={service.link._sys.filename}>
          <img src={service.image} alt={service.imageAlt} />
          <h3>{service.title}</h3>
        </a>
      ))
    }
  </div>
</section>

<style lang='scss'>
  @import "../../styles/_vars.scss";
  .services {
    h2 {
      text-align: center;
      margin-bottom: $gutter;
    }
  }

  .servicesGrid {
    width: 100%;
    display: grid;
    gap: $gutter;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  }

  .service {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: $gutter-small;
    img {
      height: 25rem;
      width: 100%;
      object-fit: cover;
    }
    h3 {
      color: $color-grey;
      font-size: 1.25rem;
      font-weight: bold;
    }
  }
</style>
